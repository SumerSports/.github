name: <INSERT SERVICE> Build and Push to ACR
on:
  push:
    branches:
      - main
  schedule:
    # trigger the build once a week at 7AM ET on Monday
    - cron: 0 11 * * 1
  paths:
    - 'services/<CHANGE ME>/**'
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  BUILD_ARGS_PATH: "<CHANGE ME>" # path to a yaml file with build args
  BUILD_NAMESPACE: ${{ REPO_NAME }}-${GITHUB_REPOSITORY#*/}
  BUILD_KEY: ${{ REPO_NAME }}-${GITHUB_REPOSITORY#*/}-${{ ${{ github.sha }}
  REPO_NAME: ${GITHUB_REPOSITORY#*/}
  TEST_DOCKER: 'false' # set to true to test the docker image

jobs:
  build:
    runs-on: [ ubuntu-latest ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      -
        name: build build args
        run: |
          BUILD_ARGS="PROJECT_NAME=<CHANGE ME> \n"
                      SOLUTION_FOLDER=<CHANGE ME> \n"
                      SERVICE_NAME=<CHANGE ME> \n"          
          
          echo "BUILD_ARGS_PATH=${{ env.BUILD_ARGS_PATH }}" >> $GITHUB_ENV
          if [ -f "${{ env.BUILD_ARGS_PATH }}" ]; then
            echo "BUILD_ARGS=<<EOF" >> $GITHUB_ENV
            echo $BUILD_ARGS >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ env.BUILD_KEY }}
          restore-keys: |
            ${{ env.BUILD_NAMESPACE }}
      - # we only want to update the release on pushes to main, but we still want to run the build to make sure it can
        # be built
        if: github.ref_name == 'main'
        id: release
        name: Determine the Release Semantic Version
        uses: rymndhng/release-on-push-action@v0.24.0
        with:
          bump_version_scheme: minor
          use_github_release_notes: true
          tag_prefix: ""
          release_name: "<RELEASE_VERSION>"
      -
        name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"
          echo "release_version=${{ steps.release.outputs.version }}" >> $GITHUB_ENV
          echo "Branch: ${{ github.ref_name }}"
          echo "Repository: ${REPO_NAME}"
          echo "Test Docker: ${TEST_DOCKER}"
          echo "TEST_DOCKER=${TEST_DOCKER}" >>${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: sumersports.azurecr.io
          username: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
      -
        name: Build and Export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          tags: |
            sumersports.azurecr.io/${{ env.REPO_NAME }}:${{ steps.release.outputs.tag_name }}
            sumersports.azurecr.io/${{ env.REPO_NAME }}:latest
            sumersports.azurecr.io/${{ env.REPO_NAME }}:${{ github.ref_name }}
            sumersports.azurecr.io/${{ env.REPO_NAME }}:${{ github.sha }}
          # This should be the only thing you need to change
          #
          build-args: | 
            ${ env.BUILD_ARG_PATH || '' }
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      -
        name: Test
        if: env.TEST_DOCKER != 'false'
        run: |
          docker run --rm sumersports.azurecr.io/${{ env.REPO_NAME }}:latest
      -
        name: Push To ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            sumersports.azurecr.io/${{ env.REPO_NAME }}:${{ steps.release.outputs.tag_name }}
            sumersports.azurecr.io/${{ env.REPO_NAME }}:latest
            sumersports.azurecr.io/${{ env.REPO_NAME }}:${{ github.ref_name }}
            sumersports.azurecr.io/${{ env.REPO_NAME }}:${{ github.sha }}
          build-args: | 
            ${ env.BUILD_ARGS || '' }
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache     
